/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package Master;

import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.table.DefaultTableModel;
import net.wimpi.modbus.ModbusException;
import net.wimpi.modbus.facade.ModbusTCPMaster;
import net.wimpi.modbus.procimg.Register;

/**
 *
 * @author Ivan Tafra
 */
public class SlavePanel extends javax.swing.JPanel {

    //VARIABLES 
    private ModbusTCPMaster _slave;
    private int _maxReg;
    private DefaultTableModel model;

    public SlavePanel() {
        initComponents();
    }

    public SlavePanel(String ip, int port, int maxReg) {
        initComponents();
        _slave = new ModbusTCPMaster(ip, port);
        _maxReg = maxReg + 1;
        jLabel_name.setText("IP: " + ip + ":" + port + " - maxReg: " + maxReg);
        model = (DefaultTableModel) jTable.getModel();
        jTable.setShowGrid(true);
    }

    ModbusTCPMaster getSlave() {
        return _slave;
    }

    /**
     * This method is called from within the constructor to initialize the form. WARNING: Do NOT modify this code. The content of this method is always regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane2 = new javax.swing.JScrollPane();
        jTable = new javax.swing.JTable();
        jLabel_name = new javax.swing.JLabel();
        jButton_read = new javax.swing.JButton();
        jText_From = new javax.swing.JTextField();
        jText_Count = new javax.swing.JTextField();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();

        setAutoscrolls(true);

        jScrollPane2.setBackground(new java.awt.Color(255, 255, 255));

        jTable.setBackground(new java.awt.Color(204, 204, 204));
        jTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null}
            },
            new String [] {
                "Registar", "Value"
            }
        ));
        jScrollPane2.setViewportView(jTable);

        jLabel_name.setText("jLabel1");

        jButton_read.setBackground(new java.awt.Color(204, 102, 0));
        jButton_read.setText("Read");
        jButton_read.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jButton_readMouseClicked(evt);
            }
        });
        jButton_read.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton_readActionPerformed(evt);
            }
        });

        jText_From.setText("0");
        jText_From.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jText_FromActionPerformed(evt);
            }
        });

        jText_Count.setText("10");

        jLabel1.setText("count:");

        jLabel2.setText("from:");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(24, 24, 24)
                        .addComponent(jLabel_name, javax.swing.GroupLayout.PREFERRED_SIZE, 194, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                            .addContainerGap()
                            .addComponent(jLabel2)
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                            .addComponent(jText_From, javax.swing.GroupLayout.PREFERRED_SIZE, 26, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                            .addComponent(jLabel1)
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                            .addComponent(jText_Count, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGap(18, 18, 18)
                            .addComponent(jButton_read))
                        .addGroup(layout.createSequentialGroup()
                            .addGap(15, 15, 15)
                            .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 215, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addContainerGap(34, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jLabel_name)
                .addGap(3, 3, 3)
                .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 278, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jButton_read)
                    .addComponent(jText_Count, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jText_From, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel1)
                    .addComponent(jLabel2))
                .addContainerGap(15, Short.MAX_VALUE))
        );
    }// </editor-fold>//GEN-END:initComponents

    private void jButton_readActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton_readActionPerformed
        // TODO add your handling  here:
    }//GEN-LAST:event_jButton_readActionPerformed

    private void jText_FromActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jText_FromActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jText_FromActionPerformed

    private void jButton_readMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jButton_readMouseClicked
        try {
            Update();
        } catch (ModbusException ex) {
            Logger.getLogger(SlavePanel.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_jButton_readMouseClicked


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jButton_read;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel_name;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JTable jTable;
    private javax.swing.JTextField jText_Count;
    private javax.swing.JTextField jText_From;
    // End of variables declaration//GEN-END:variables

    void Update() throws ModbusException {

        Register[] reg;
        int from = Integer.parseInt(jText_From.getText());
        int count = Integer.parseInt(jText_Count.getText());

        if (from + count > _maxReg - 1) {
            count = _maxReg - from;
            jText_Count.setText(Integer.toString(count));
        }

        reg = _slave.readMultipleRegisters(from, count);
        /* UPDATE U TABLICU */
        model.setRowCount(count);
        for (int i = 0; i < reg.length; i++) {
            model.setValueAt(i + from, i, 0);
            model.setValueAt(reg[i].getValue(), i, 1);
        }

        for (int i = 0; i < reg.length; i++) {
            System.out.println(reg[i].getValue());
        }
    }

}
